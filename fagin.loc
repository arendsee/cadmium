@path

# pure data pipeline
null:main . classes . *Labels *Tree

# stub for feature table construction
Labels :: echo:labels

# stub for loading species tree
Tree :: echo:tree


@4

null:main :+ mkdir . `input`

# Make all derived data, prepare environment
null:main :+ null . map .
    & ( null:prologue
        .
        ( record . ( get_torf   . gf:gff    gf:gen ) ( gf:torf   ) )
        ( record . ( get_gene   . gf:gff    gf:gen ) ( gf:gene   ) )
        ( record . ( get_pro    . gf:gff    gf:gen ) ( gf:pro    ) )
        ( record . ( get_orfpro .           gf:gen ) ( gf:orfpro ) )
        ( record . ( get_glen   .           gf:gen ) ( gf:len    ) )
        .
        $1
    )
    list_species
# Make data based on this derived data
null:main :+ null . map .
    & (
        null
        .
        (record . ( get_orfgff . gf:orfpro ) ( gf:orfgff ))
        .
        $1
    )
    list_species

@check
null:prologue :+ file_readable . <gf:gen>
null:prologue :+ file_readable . <gf:gff>
get_orfgff :+ file_readable . <gf:orfpro>

@cache
null:main :: datcache


@arg
echo:labels :: "labels"
echo:tree :: "tree"
mkdir :: -p


@alias
classes :: cat


@include
src/prologue
src/io

core/control
core/atomic
core/datcache
core/type
