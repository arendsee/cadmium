# --- Bash config --- fagin inputs ------------------------------------------


HOME_DIR="$HOME/src/git/fagin"

# -----------------------------------------------------------------------------
# File to hold links to input data and intermediate files. This directory
# should be on a filesystem with adequate storage (+10Gb, depending on project
# size).
# -----------------------------------------------------------------------------
INPUT="input"


# -----------------------------------------------------------------------------
# GFF_DIR is a directory containing a GFF file for each species used in the
# pipeline. This GFF file must contain at minimum mRNA and coding sequence
# (CDS) features. The last column must contain a unique id for the specific
# gene model (mRNA). All start and stop positions must be relative to the
# reference genomes in FNA_DIR (see argument -n).
# 
# Chr1   .   mRNA   3631   5899   .   +   .   AT1G01010.1 Chr1   .   CDS 3760
# 3913   .   +   .   AT1G01010.1 Chr1   .   CDS    3996   4276   .   + .
# AT1G01010.1
# -----------------------------------------------------------------------------
GFF_DIR="$HOME/db/fagin-input/gff"


# -----------------------------------------------------------------------------
# FNA_DIR is a directory containing a single genome sequence file for each
# species used in the pipeline. The files must be in FASTA format.
# -----------------------------------------------------------------------------
FNA_DIR="$HOME/db/fagin-input/fna"


# -----------------------------------------------------------------------------
# syn_dir should be the name of directory containing one synteny map for each
# species that will be compared. each synteny map should consist of a single
# file named according to the pattern "<query>.vs.<target>.tab", for example,
# "arabidopsis_thaliana.vs.arabidopsis_lyrata.tab". these files should contain
# the following columns:
#
# 1. query contig name (e.g. chromosome or scaffold)
# 2. query start position
# 3. query stop position
# 4. target contig name
# 5. target start position
# 6. target stop position
# 7. score (not necessarily used)
# 8. strand relative to query
#
# here is an example:
#
# chr2	193631	201899	tchr2	193631	201899	100	+
# chr2	225899	235899	tchr2	201999	202999	100	+
# chr1	5999	6099	tchr1	6099	6199	100	+
# chr1	5999	6099	tchr1	8099	8199	100	+
# chr1	17714	18714	tchr2	17714	18714	100	+
# chr2	325899	335899	tchr2	301999	302999	100	+
#
# a synteny map like this can be created using a whole genome synteny program,
# such as satsuma (highly recommended). building a single synteny map requires
# hundreds of cpu hours, so it is best done on a cluster. an example pbs script
# is provided, see src/satsuma.pbs.
# -----------------------------------------------------------------------------
SYN_DIR="$HOME/db/fagin-input/syn"


# -----------------------------------------------------------------------------
# TREE is a newick format file specifying the topology of the species tree. It
# must contain all species used in the pipeline AND NO OTHERS (I may relax this
# restriction later).
#
# NOTE: There must be no spaces in the species names.
#
# Here is an example tree:
#
# (Brassica_rapa,(Capsella_rubella,(Arabidopsis_lyrata,Arabidopsis_thaliana)));
# -----------------------------------------------------------------------------
TREE="$HOME/db/fagin-input/brassicaceae.tree"


# -----------------------------------------------------------------------------
# FOCAL_SPECIES is the name of the one species whose orphans will be
# characterized by this pipeline (e.g. Arabidopsis_thaliana). The name must be
# consistent with the species names used elsewhere in the pipeline.
#
# For now, there can be only one focal species. Future releases may contain an
# all-vs-all option.
# -----------------------------------------------------------------------------
FOCAL_SPECIES="Arabidopsis_thaliana"

SEARCH_GFF="$HOME/db/fagin-input/synder-at.gff"

ORPHAN_LIST="$HOME/db/fagin-input/orphan-list.txt"


# -----------------------------------------------------------------------------
# Minimum length of an interval in the synteny map (target side) --- This value
# can be adjusted to change the resolution of the map. Higher values reduce the
# number of syntenic links that will be included, thus generally increase the
# number queries contained entirely within the search intervals.  The cost is
# increased search space.
# -----------------------------------------------------------------------------
MINLEN=0



# --- R config --- Report inputs ----------------------------------------------

# Synder output described match type with 5 flags:
#    * 0 - query is fully within the target interval
#    * 1 - query starts outside the interval but stops inside
#    * 2 - query stops outside the interval but starts inside 
#    * 3 - query fully contains the target interval (start and stop unbounded)
#    * 4 - query does not overlap the target interval (unbound and unanchored)
# If the *extend* option is set, then unbounded edges of search intervals are
# extended by the length of the query gene times *extend_factor*.
R_EXTEND=TRUE     # Turn on EXTEND
R_EXTEND_FACTOR=1 # Set the mutiplier for the termnal windoes

R_HOME="~/src/git/fagin"

R_FAA_DIR="~/src/git/fagin/input/faa"
R_GFF_DIR="~/src/git/fagin/input/gff"
R_SYN_DIR="~/src/git/fagin/input/syn"
R_GENE_DIR="~/src/git/fagin/input/gene"
R_GENOME_DIR="~/src/git/fagin/input/fna"
R_SI_DIR="~/src/git/fagin/input/maps"

R_SPECIES_FILE="~/src/git/fagin/input/species"

R_SCAFLEN='~/src/git/fagin/input/stat/scaffold-lengths.tab'
R_NSTRINGS='~/src/git/fagin/input/stat/nstrings.tab'
R_ORPHAN_LIST="~/src/git/fagin/input/orphan-list.txt"

R_ORFGFF="~/src/git/fagin/input/orf-gff"
R_ORFFAA="~/src/git/fagin/input/orf-faa"

R_TRANS_ORF="~/src/git/fagin/input/trans-orf"

R_CACHE="~/src/git/fagin/cache"

R_DECISION_TREE="~/src/git/fagin/decision-trees/cds.yaml"
R_TREE="~/src/git/fagin/input/tree"
R_FOCAL_SPECIES=FOCAL_SPECIES

# Base p-value cutoffs (these will be adjusted for multiple testing
# query protein versus target gene alignments
R_PROT2PROT_PVAL=0.05
# query protein versus all SI translated ORFs
R_PROT2ALLORF_PVAL=0.05
# query protein versus translated ORFs from spliced transcripts
R_PROT2TRANSORF_PVAL=0.05
# query genes versus entire SI (nucleotide match)
R_DNA2DNA_PVAL=0.05

# Number of simulations
R_PROT2PROT_NSIMS=1e3
R_PROT2ALLORF_NSIMS=1e3
R_PROT2TRANSORF_NSIMS=1e3

R_DNA2DNA_MAXSPACE=1e7

R_INDEL_THRESHOLD=0.05
