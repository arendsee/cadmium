# By default the variables in path are assumed to be function names

@comment

(genid ~ target, features) --> (genid ~ features, labels) --> (genid, class)
                                /
                         tree--'

  {- partition qids ~ qspecies ~ tspecies -}

@export

main as run

@path

main :: classes . labels tree

-----------------------------------------
labels ::
  merge_leafs .
  gen ? O1,
  trn ? O2,
  orf ? O3,
  nuc ?
    cds ? N1,
    rna ? N2, N3,
  tec ? U1,
  una ? U2,
  ind ? U3,
  nst ? U4,
  res ? U5,
  scr ? U6, U7 .
  qids qspecies tspecies

-----------------------------------------
gen :: is_gen . aa_aln . aa:1 aa:2
trn :: is_trn . aa_aln . aa   aa_morf
orf :: is_orf . aa_aln . aa   aa_ngorf
nuc :: is_nuc . dna_aln . gene genomic_si
cds :: is_cds . intersection . (getcds . GFF:1) (getcds . GFF:2)
rna :: is_rna . intersection . (getrna . GFF:1) (getrna . GFF:2)
tec :: is_tec . Sequence SearchInterval
una :: is_una . unassembled . SearchInterval
ind :: is_ind . ind
nst :: is_nst . GFF nstrings
res :: is_res . ind
scr :: is_scr . summarize_flags . SearchInterval

-----------------------------------------
ind      :: indel.stats . findIndels . SearchInterval            ;
GFF      :: gi . (parse_9th . gff) (seqinfo . (length . bioseq)) ;
seq_feat :: extract_feature . GFF bioseq                         ;
bioseq   :: (is_aa ? unstar , id) . reduce_header . load_fasta   ;

aa_morf  :: unstar . translate . getorf . concat . getfasta . (getexon GFF) bioseq;
aa_ngorf :: unstar . rm_x . translate . getorf . bioseq;
aa       :: unstar . translate . concat . getfasta . (getcds GFF) bioseq;

gene :: concat . getfasta . (getcds GFF) bioseq;
genomic_si :: getfasta . SearchInterval bioseq;

aln_aa2aa ::
    fit_gumbel .
        (aln_xy . bioseq:1 bioseq:2)
        (fpdist . aln_xy . (seq_sample bioseq:1) (seq_sample bioseq:2));

SearchInterval ::
    synder .
        (align_genome . bioseq:1 bioseq:2)
        (length:1 bioseq:1) (length:2 bioseq:2);

O1 = [$1, 'ORFic',     'O1', 'ORFic - known protein'            ]
O2 = ['ORFic',     'O2', 'ORFic - transcribed ORF'          ]
O3 = ['ORFic',     'O3', 'ORFic - unknown ORF'              ]
N1 = ['Non-ORFic', 'N1', 'SI overlaps CDS'                  ]
N2 = ['Non-ORFic', 'N2', 'SI overlaps exon'                 ]
N3 = ['Non-ORFic', 'N3', 'SI overlaps no known gene'        ]
U1 = ['Unknown',   'U1', 'skipped'                          ]
U2 = ['Unknown',   'U2', 'unassembled'                      ]
U3 = ['Unknown',   'U3', 'possible indel'                   ]
U4 = ['Unknown',   'U4', 'possibly in unknown region'       ]
U5 = ['Unknown',   'U5', 'possibly resized'                 ]
U6 = ['Unknown',   'U6', 'scrambled synteny'                ]
U7 = ['Unknown',   'U7', 'good syntenic match, no homology' ]
-----------------------------------------

@arg
synder :: k=100, b='011111'

gen->get_AA:1,
trn->get_AA:1,
orf->get_orf:1,
nuc->genomic_si:1,
cds->GFF:1,
rna->GFF:1,
tec->SearchInterval,
una->SearchInterval,
nst->GFF :: species=$2

gen->get_AA:2,
trn->get_morf,
orf->get_orf,
nuc->genomic_si,
cds->GFF:2,
rna->GFF:2,
tec->SearchInterval,
una->SearchInterval,
nst->nstrings,
ind->ind->SearchInterval,
res->ind->SearchInterval,
scr->SearchInterval :: <species=$3>

@alias
gi        = annotated_gi
gff       = get_raw_gff
seqinfo   = get_seqinfo
length    = get_sequence_length
fasta     = load_fasta_aa
tree      = load_tree
parse_9th = undefined

@doc
gen :: 'Is AA similar to a known gene?'
trn :: 'Is AA similar to any ORF on known mRNA?'
orf :: 'Is AA similar to any ORF anywhere?'
nuc :: 'Is DNA similar to anything?'
cds :: 'Does search interval overlap a CDS?'
rna :: 'Does search interval overlap an exon?'
tec :: 'Was the nucleotide not searched for technical reasons?'
una :: 'Query maps off target scaffold'
ind :: 'Query maps to zero-length target interval'
nst :: 'Query maps to N-string'
res :: 'Query maps to target interval smaller than self'
scr :: 'Query maps inbetween contiguous block'

parse_9th :: 'Parse the parent-child relations from the 9th GFF column'
