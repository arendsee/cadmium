\subsection{Data input}
% ============================================================================
% Import libraries
<<message=FALSE>>=
require(ggplot2)
require(intervals)
require(plyr)
require(magrittr)
require(xtable)
source('~/src/git/cadmium/src/report/R/loadData.R')

# TODO REMOVE THIS IN PRODUCTION CODE
args <- list(
    query_gff = '~/src/git/cadmium/input/gff/Arabidopsis_thaliana.gff',
    synteny   = '~/src/git/cadmium/input/syn/Arabidopsis_thaliana.vs.Arabidopsis_lyrata.syn',
    nstring   = '~/src/git/cadmium/input/stat/nstrings.tab'
)
@

\subsection{Summaries of input data}
% ============================================================================
% Load all input data
<<cache=TRUE, warning=FALSE, message=FALSE>>=
syn <- LoadSyntenyMap(args$synteny)
gff <- LoadGFF(args$query_gff, features='mRNA')
nstring <- LoadNString(args$nstring)
@

\subsection{Gene feature format file for focal species}
<<results='asis', cache=TRUE>>=
data.frame(
  Chromosome = gff %>% seqnames %>% levels,
  mRNAs      = gff %>% seqnames %>% runLength
) %>% xtable
@

\subsection{Syntenic ouput of SatsumaSynteny}
<<results='asis', cache=TRUE>>=
data.frame(
  Chromosome       = syn$query %>% seqnames %>% levels,
  N.synteny.blocks = syn$query %>% seqnames %>% runLength
) %>% xtable
@

\begin{figure}[!ht]
    \centering
<<cache=TRUE>>=
lograt <- log2(width(syn$query) / width(syn$target)[syn$query$over])
lograt <- lograt[abs(lograt) > 0.25] 
plot(
    lograt,
    xlab='Ordered position on query genome',
    ylab='log2 of query to target length ratio'
)
abline(0, 0)
@
    \caption{\textbf{Diagnostic plot of query to target lengths in synteny
        map}. The syntenic intervals on the query and target sides should
        be of similar length.  They will not be exactly the same size if gaps
        are allowed in the alignment, but wild deviation from 0 (more than,
        say, 2) indicates errors in the input. To avoid overplottin, values
        between -0.25 and 0.25 are not plotted.} 
\end{figure}
