@path
# pure data pipeline
null:main . classes . *Labels *Tree

# stub for feature table construction
Labels :: echo:labels
# stub for loading species tree
Tree :: echo:tree


@export
null:main as run


@2
null:main :+ mkdir . `input`
# Make all derived data, prepare environment
null:main :+ null:prep . map  .
    & ( null
        .
        ( record . ( smof:stat  .           gf:gen ) ( gf:len    ) )
        ( record . ( get_torf   . gf:gff    gf:gen ) ( gf:torf   ) )
        ( record . ( get_gene   . gf:gff    gf:gen ) ( gf:gene   ) )
        ( record . ( get_pro    . gf:gff    gf:gen ) ( gf:pro    ) )
        ( record . ( get_orfpro .           gf:gen ) ( gf:orfpro ) )
        ( record . ( get_orfgff . gf:orfpro        ) ( gf:orfgff ) )
        .
        $1
    )
    list_species

@3
# Clean up all temporary files, archive data
null:main :+ null . mkdir . `archive` `input`


@cache
null:main :: datcache


@check
null:main :+ file_readable . "data/species.txt"

@arg
# stub
echo:labels :: "labels"
# stub
echo:tree :: "tree"

smof:stat :: stat -q

mkdir :: -p


@alias
# stub
classes :: cat


@include
"src/prologue.loc"
"src/io.loc"

"core/sh/control.loc"
"core/sh/atomic.loc"
"core/sh/datcache.loc"
